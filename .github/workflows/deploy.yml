name: CI/CD to Cloud Run

on:
  push:
    branches:
      - '**' 

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: fifth-honor-476010-u0
      REGION: asia-southeast1

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Set up Docker Buildx for multi-arch builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4. Authenticate with GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      # 5a. Configure Docker to authenticate with GCR
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      # 5. Configure gcloud project
      - name: Set GCP project
        run: gcloud config set project $PROJECT_ID

      # 6. Build & push frontend Docker image
      - name: Build & push frontend
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t gcr.io/$PROJECT_ID/peerprep-frontend:latest \
            ./peerprep \
            --push

      # 7. Deploy frontend to Cloud Run
      - name: Deploy frontend
        run: |
          gcloud run deploy peerprep-frontend \
            --image gcr.io/$PROJECT_ID/peerprep-frontend:latest \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated

      # 8. Build & push user-service Docker image
      - name: Build & push user-service
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t gcr.io/$PROJECT_ID/user-service:latest \
            ./user-service \
            --push

      # 9. Deploy user-service to Cloud Run
      - name: Deploy user-service
        run: |
          gcloud run deploy user-service \
            --image gcr.io/$PROJECT_ID/user-service:latest \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated

      # 10. Build & push question-service Docker image
      - name: Build & push question-service
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t gcr.io/$PROJECT_ID/question-service:latest \
            ./question-service \
            --push

      # 11. Deploy question-service to Cloud Run
      - name: Deploy question-service
        run: |
          gcloud run deploy question-service \
            --image gcr.io/$PROJECT_ID/question-service:latest \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated

      # 12. Build & push matching-service Docker image
      - name: Build & push matching-service
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t gcr.io/$PROJECT_ID/matching-service:latest \
            ./matching-service \
            --push

      # 13. Deploy matching-service to Cloud Run
      - name: Deploy matching-service
        run: |
          gcloud run deploy matching-service \
            --image gcr.io/$PROJECT_ID/matching-service:latest \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated
